import { chartAdvisor } from '../index';
import { AdviserParams, DimensionField, AdviseResult, ChartType } from '../type';

const mockDataset = [
  {
    '231026105743048': '5734340.8279953',
    '231026105743063': '家具'
  },
  {
    '231026105743048': '4865589.799788475',
    '231026105743063': '办公用品'
  },
  {
    '231026105743048': '5469023.505149841',
    '231026105743063': '技术'
  }
];

const dimensionList: DimensionField[] = [
  {
    uniqueId: 231026105743063,
    type: 'string'
  }
];

const measureList: DimensionField[] = [
  {
    uniqueId: 231026105743048,
    type: 'number'
  }
];

const aliasMap = {
  '231026105743063': '类别',
  '231026105743048': '销售额'
};

const mockParams: AdviserParams = {
  originDataset: mockDataset,
  dimensionList,
  measureList,
  aliasMap
};

function advise() {
  const result = chartAdvisor(mockParams);

  console.log(123, 'scores', result);

  const chartType = result.chartType;

  return chartType;
}

// test('column', () => {
//   expect(advise()).toBe(ChartType.COLUMN_PARALLEL);
// });

const mockDimList2 = [
  { uniqueId: 1699615168282, type: 'date' },
  { uniqueId: 1699615168283, type: 'string' }
];
const mockMeaList2 = [{ uniqueId: 1699615168284 }, { uniqueId: 1699615168285 }];
const mockDataset2 = [
  { '1699615168282': '2022-10-01', '1699615168283': '公司', '1699615168284': '111', '1699615168285': null },
  {
    '1699615168282': '2023-01-01',
    '1699615168283': '公司',
    '1699615168284': '213',
    '1699615168285': '0.918918918918919'
  },
  {
    '1699615168282': '2023-04-01',
    '1699615168283': '公司',
    '1699615168284': '292',
    '1699615168285': '0.37089201877934275'
  },
  {
    '1699615168282': '2023-07-01',
    '1699615168283': '公司',
    '1699615168284': '257',
    '1699615168285': '-0.11986301369863013'
  },
  {
    '1699615168282': '2023-10-01',
    '1699615168283': '公司',
    '1699615168284': '106',
    '1699615168285': '-0.5875486381322957'
  },
  { '1699615168282': '2022-10-01', '1699615168283': '小型企业', '1699615168284': '93', '1699615168285': null },
  {
    '1699615168282': '2023-01-01',
    '1699615168283': '小型企业',
    '1699615168284': '78',
    '1699615168285': '-0.16129032258064516'
  },
  {
    '1699615168282': '2023-04-01',
    '1699615168283': '小型企业',
    '1699615168284': '150',
    '1699615168285': '0.9230769230769231'
  },
  { '1699615168282': '2023-07-01', '1699615168283': '小型企业', '1699615168284': '183', '1699615168285': '0.22' },
  {
    '1699615168282': '2023-10-01',
    '1699615168283': '小型企业',
    '1699615168284': '91',
    '1699615168285': '-0.5027322404371585'
  },
  { '1699615168282': '2022-10-01', '1699615168283': '消费者', '1699615168284': '196', '1699615168285': null },
  {
    '1699615168282': '2023-01-01',
    '1699615168283': '消费者',
    '1699615168284': '299',
    '1699615168285': '0.5255102040816326'
  },
  {
    '1699615168282': '2023-04-01',
    '1699615168283': '消费者',
    '1699615168284': '485',
    '1699615168285': '0.6220735785953178'
  },
  {
    '1699615168282': '2023-07-01',
    '1699615168283': '消费者',
    '1699615168284': '451',
    '1699615168285': '-0.07010309278350516'
  },
  {
    '1699615168282': '2023-10-01',
    '1699615168283': '消费者',
    '1699615168284': '247',
    '1699615168285': '-0.4523281596452328'
  }
];

test('combination', () => {
  function advise() {
    const result = chartAdvisor({
      dimensionList: mockDimList2 as any,
      measureList: mockMeaList2,
      originDataset: mockDataset2
    });

    const chartType = result.chartType;

    return chartType;
  }
  expect(advise()).toBe(ChartType.COLUMN_PARALLEL);
});
